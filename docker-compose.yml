
name: gn

x-geonetwork-environment:
  &default-geonetwork-environment
  WEBAPP_CONTEXT_PATH: /
  DATA_DIR: /catalogue-data
  TZ: Europe/Amsterdam
  JAVA_OPTS: >-
    --add-opens=jdk.management/com.sun.management.internal=ALL-UNNAMED
    -Djava.security.egd=file:/dev/./urandom -Djava.awt.headless=true
    -Xms512M -Xss512M -Xmx2G -XX:+UseConcMarkSweepGC
    -Djetty.httpConfig.requestHeaderSize=32768
    -Dorg.eclipse.jetty.server.Request.maxFormContentSize=500000
    -Dorg.eclipse.jetty.server.Request.maxFormKeys=4000
    -Dorg.apache.activemq.broker.BrokerService.tempUsage.limit=2gb
    -Dcom.sun.management.jmxremote=false

  GN_CONFIG_PROPERTIES: >-
    -Dgeonetwork.dir=/catalogue-data
    -Dgeonetwork.formatter.dir=/catalogue-data/data/formatter
    -Dgeonetwork.schema.dir=/opt/geonetwork/WEB-INF/data/config/schema_plugins
    -Dgeonetwork.indexConfig.dir=/opt/geonetwork/WEB-INF/data/config/index
    -Dgeonetwork.schemapublication.dir=/opt/geonetwork/WEB-INF/data/resources/schemapublication
    -Dgeonetwork.htmlcache.dir=/opt/geonetwork/WEB-INF/data/resources/htmlcache
    -Des.host=elasticsearch
    -Des.protocol=http
    -Des.port=9200
    -Des.url=https://solid-space-garbanzo-ppw99vg69p4374j9-9200.app.github.dev/
    -Des.username=
    -Des.password=
    -Dgeonetwork.ESFeaturesProxy.targetUri=https://solid-space-garbanzo-ppw99vg69p4374j9-9200.app.github.dev/gn-features/{_}
    -Dgeonetwork.HttpDashboardProxy.targetUri=http://kibana:5601
    -Dgeonetwork.MicroServicesProxy.targetUri=http://ogc-api-records-service:8080
  GEONETWORK_DB_TYPE: postgres
  GEONETWORK_DB_HOST: database
  GEONETWORK_DB_PORT: 5432
  GEONETWORK_DB_NAME: geonetwork
  GEONETWORK_DB_USERNAME: geonetwork
  GEONETWORK_DB_PASSWORD: geonetwork
  VIRTUAL_HOST: localhost

x-service-geonetwork:
  &default-service-geonetwork
  image: geonetwork:4.4.6
  healthcheck:
    test: "curl http://localhost:8080/"
    interval: 5s
    timeout: 5s
    retries: 30
  labels:
    - "traefik.enable=true"
    - "traefik.http.routers.geonetwork.rule=PathPrefix(`/geonetwork`)"
    - "traefik.http.routers.geonetwork.entrypoints=websecure"
    - "traefik.http.routers.geonetwork.service=geonetwork"
    - "traefik.http.services.geonetwork.loadbalancer.server.port=8080"
    - "traefik.http.services.geonetwork.loadbalancer.sticky=true"
    - "traefik.http.services.geonetwork.loadbalancer.sticky.cookie.name=gnstickycookie"
    - "traefik.http.services.geonetwork.loadbalancer.sticky.cookie.secure=false"
    - "traefik.http.services.geonetwork.loadbalancer.sticky.cookie.httpOnly=true"
  restart: always
  user: root
  volumes:
   # - geonetwork:/catalogue-data
    - ./geonetwork-data:/catalogue-data
    - ./pgdata:/var/lib/postgresql/data
    - ./esdata:/usr/share/elasticsearch/data
    - ./activemq-data:/var/lib/jetty/activemq-data 
  depends_on:
    database:
      condition: service_healthy
  networks:
    - gn-network

services:

  nginx:
    image: nginx:alpine
    container_name: science-portal
    ports:
      - "8082:80"
    volumes:
      - ./html:/usr/share/nginx/html:ro  # Serve your HTML file
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.science-portal.rule=PathPrefix(`/portal`)"  # Traefik route
      - "traefik.http.routers.science-portal.entrypoints=websecure"
      - "traefik.http.services.science-portal-service.loadbalancer.server.port=80"  # Expose port 80
    networks:
      - web

  traefik:
    image: "traefik:v2.10"
    container_name: "traefik"
    command:
      - "--log.filePath=/logs/traefik.log"
      - "--accesslog=true"
      - "--accesslog.bufferingsize=50"
      - "--accesslog.filePath=/logs/access.log"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.websecure.address=:8081"
      - "--log.level=DEBUG"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
    ports:
      - "80:80"
      - "443:443"
      - "8081:8081"
      - "8000:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - traefiklog:/logs
    networks:
      - gn-network
      - web
    labels:
      - "traefik.http.routers.research-portal.rule=PathPrefix(`/portal`)"
      - "traefik.http.routers.research-portal.entrypoints=websecure"
      - "traefik.http.routers.research-portal.service=research-portal-service"
      - "traefik.http.services.research-portal-service.loadbalancer.server.port=8082" # Changed to 8082

  database:
    image: postgis/postgis:11-2.5
    environment:
      POSTGRES_USER: geonetwork
      POSTGRES_PASSWORD: geonetwork
      POSTGRES_DB: geonetwork
    command:
      - "postgres"
      - "-c"
      - "log_statement=all"
      - "-c"
      - "logging_collector=true"
      - "-c"
      - "log_file_mode=0644"
      - "-c"
      - "log_directory=/var/log/postgresql"
      - "-c"
      - "log_filename=postgresql.log"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data
      - pglog:/var/log/postgresql
    networks:
      - gn-network

  geonetwork:
    <<: *default-service-geonetwork
    environment:
      <<: *default-geonetwork-environment
      HARVESTER_SCHEDULER_ENABLED: "true"
      HARVESTER_REFRESH_INTERVAL_MINUTES: 2
      GN_AUTH_KEYCLOAK_ENABLED: "true"
      GN_AUTH_KEYCLOAK_FORCE: "true"
      GN_AUTH_KEYCLOAK_HIDE_LOGIN_FORM: "false"
      GN_AUTH_KEYCLOAK_CLIENT_ID: "geonetwork"
      GN_AUTH_KEYCLOAK_REALM: "master"
      GN_AUTH_KEYCLOAK_URL: "https://solid-space-garbanzo-ppw99vg69p4374j9-8085.app.github.dev/realms/master/geonetwork/protocol/openid-connect/auth/"
      GN_AUTH_KEYCLOAK_REDIRECT_URI: "https://solid-space-garbanzo-ppw99vg69p4374j9-8080.app.github.dev/*"
      GN_AUTH_KEYCLOAK_CLIENT_SECRET: "Wjf73ttbLrNhj3SiS7Fp9jd2oWx91XLe"
      GN_AUTH_KEYCLOAK_ROLE_CLAIM: "roles"
      GN_AUTH_KEYCLOAK_GROUPS_CLAIM: "groups"
      GN_AUTH_KEYCLOAK_USERNAME_CLAIM: "preferred_username"
      GN_AUTH_KEYCLOAK_EMAIL_CLAIM: "email"
      GN_AUTH_KEYCLOAK_LOGOUT_REDIRECT_URI: "https://solid-space-garbanzo-ppw99vg69p4374j9-8085.app.github.dev/realms/master/protocol/openid-connect/logout"

    ports:
      - 8080:8080
    networks:
      - gn-network

  geonetwork-replica:
    profiles: ["scaled"]
    <<: *default-service-geonetwork
    environment:
      <<: *default-geonetwork-environment
      HARVESTER_SCHEDULER_ENABLED: "false"
      HARVESTER_REFRESH_INTERVAL_MINUTES: 0
    deploy:
      mode: replicated
      replicas: 1
    ports:
      - "8081-8082:8080"

  ogc-api-records-service:
    image: geonetwork/gn-cloud-ogc-api-records-service:4.4.3-0
    environment:
      SPRING_PROFILES_ACTIVE: standalone
      SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/geonetwork
      SPRING_DATASOURCE_USERNAME: geonetwork
      SPRING_DATASOURCE_PASSWORD: geonetwork
      GN_BASEURL: http://geonetwork.localhost/geonetwork/api
      GN_LEGACY_URL: http://geonetwork.localhost/geonetwork
      GN_INDEX_URL: http://elasticsearch:9200
      SERVER_FORWARDHEADERSSTRATEGY: FRAMEWORK
      JAVA_OPTS: -Dfile.encoding=UTF-8
    healthcheck:
      test: "timeout 10s bash -c ':> /dev/tcp/127.0.0.1/8080' || exit 1"
      interval: 10s
      timeout: 2s
      retries: 10
    depends_on:
      geonetwork:
        condition: service_healthy
    networks:
      - gn-network

  elasticsearch:
    image: elasticsearch:8.14.3
    ports:
      - 9200:9200
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test: "curl -s http://localhost:9200 >/dev/null || exit 1"
      interval: 10s
      timeout: 2s
      retries: 10
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - gn-network

  kibana:
    image: kibana:8.14.3
    environment:
      SERVER_NAME: "kibana"
      ELASTICSEARCH_URL: https://solid-space-garbanzo-ppw99vg69p4374j9-9200.app.github.dev/
      SERVER_BASEPATH: /geonetwork/dashboards
      SERVER_REWRITEBASEPATH: "false"
      XPACK_MONITORING_UI_CONTAINER_ELASTICSEARCH_ENABLED: "true"
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - gn-network

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
      POSTGRES_DB: keycloak
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - 5432:5432 # optional, only if you want to access the db directly from your host.
    networks:
      - gn-network

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    command: start-dev --import-realm
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://db:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
      KC_HTTP_PORT: 8085
      KC_HOSTNAME: https://solid-space-garbanzo-ppw99vg69p4374j9-8085.app.github.dev/
      QUARKUS_DATASOURCE_JDBC_POOL_SIZE: 20
    ports:
      - 8085:8085
    depends_on:
      - db
    volumes:
      - ./realm-export.json:/opt/keycloak/data/import/realm-export.json # optional, for realm imports.
    networks:
      - gn-network

volumes:
  geonetwork:
  esdata:
  pgdata:
  pglog:
  traefiklog:
  db-data:

networks:
  gn-network:
    driver: bridge
  web:
    external: true 
